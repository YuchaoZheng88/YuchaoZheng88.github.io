

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/</id>
  <title>Yuchao Toolbox</title>
  <subtitle>A blog to save the my learning notes with tags, easy to search.</subtitle>
  <updated>2022-05-13T22:33:50+08:00</updated>
  <author>
    <name>Yuchao</name>
    <uri>/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2022 Yuchao </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>BurpSuite Lab</title>
    <link href="/posts/BurpSuite-Lab/" rel="alternate" type="text/html" title="BurpSuite Lab" />
    <published>2022-05-10T11:33:00+08:00</published>
  
    <updated>2022-05-11T22:38:52+08:00</updated>
  
    <id>/posts/BurpSuite-Lab/</id>
    <content src="/posts/BurpSuite-Lab/" />
    <author>
      <name>Yuchao</name>
    </author>

  
    
    <category term="sec" />
    
  

  
    <summary>
      





      sql injection

cheetsheet
https://portswigger.net/web-security/sql-injection/cheat-sheet

'+OR+1=1--
'+UNION+SELECT+NULL,NULL--

-- find columns are compatible with string data
'+UNION+SELECT+'abcdef',NULL,NULL--

-- oracle, find database type and version
'+UNION+SELECT+'abc','def'+FROM+dual--
'+UNION+SELECT+BANNER,+NULL+FROM+v$version--

-- mysql, find database type and verion
'+UNION+SELECT+'...
    </summary>
  

  </entry>

  
  <entry>
    <title>self reproducing code</title>
    <link href="/posts/self-reproducing-code/" rel="alternate" type="text/html" title="self reproducing code" />
    <published>2022-04-29T11:33:00+08:00</published>
  
    <updated>2022-04-29T11:33:00+08:00</updated>
  
    <id>/posts/self-reproducing-code/</id>
    <content src="/posts/self-reproducing-code/" />
    <author>
      <name>Yuchao</name>
    </author>

  
    
    <category term="sec" />
    
  

  
    <summary>
      





      How to write a quine

self-reproducing code
A quine is a program, takes no input and produces a copy of its own source code as its only output.

original code is:

Head is: malicious code + data of line numbers for tail
Body is:  `Head in string` + `Tail in string`
Tail   is:  reproducing code


Tail code = print(Body.head) + print(Body) + print(Body.tail)

after execution:

  execute malicious...
    </summary>
  

  </entry>

  
  <entry>
    <title>CEH small points</title>
    <link href="/posts/CEH-SMALL-POINTS/" rel="alternate" type="text/html" title="CEH small points" />
    <published>2022-04-18T11:33:00+08:00</published>
  
    <updated>2022-05-06T22:48:23+08:00</updated>
  
    <id>/posts/CEH-SMALL-POINTS/</id>
    <content src="/posts/CEH-SMALL-POINTS/" />
    <author>
      <name>Yuchao</name>
    </author>

  
    
    <category term="sec" />
    
  

  
    <summary>
      





      Insertion attack

  TTL field, some packets will end in IDS
  like tcp 3 packets [maliciou][xxx][s], IDS see maliciouxxxs, backend see malicious.
  PHF attack, “phf” in GET request.


Unicode invasion, aka Obfuscating

  bypass IDS, IDS cannot recognize, but web server can decode
  \u017F can be used as S


Rogue router: thentication to prevent.

Regulation:

  HIPAA:  Health Insurance Portabil...
    </summary>
  

  </entry>

  
  <entry>
    <title>htb altered</title>
    <link href="/posts/htb-altered/" rel="alternate" type="text/html" title="htb altered" />
    <published>2022-04-02T11:33:00+08:00</published>
  
    <updated>2022-04-04T20:22:59+08:00</updated>
  
    <id>/posts/htb-altered/</id>
    <content src="/posts/htb-altered/" />
    <author>
      <name>Yuchao</name>
    </author>

  
    
    <category term="sec" />
    
  

  
    <summary>
      





      Know it`s an php lavarel application behind nginx.

Brute force Laravel application pin

try type juggling

  change content type to application/json
  application/x-www-form-urlencoded, body is name=admin&amp;amp;pin=1234
  application/json, body is {"name":"admin", "pin":true} try type juggling, php == not === vulnarability, but no on this box.


fuzz

  In type Juggling, we know the php uses ===...
    </summary>
  

  </entry>

  
  <entry>
    <title>htb stacked</title>
    <link href="/posts/htb-stacked/" rel="alternate" type="text/html" title="htb stacked" />
    <published>2022-03-29T11:33:00+08:00</published>
  
    <updated>2022-03-31T20:58:39+08:00</updated>
  
    <id>/posts/htb-stacked/</id>
    <content src="/posts/htb-stacked/" />
    <author>
      <name>Yuchao</name>
    </author>

  
    
    <category term="sec" />
    
  

  
    <summary>
      





      recon

nmap
nmap -p- --min-rate 10000 -oA scans/nmap-alltcp 10.10.11.112
nmap -p 22,80,2376 -sCV -oA scans/nmap-tcpscripts 10.10.11.112


  22/tcp   open  ssh; 80/tcp   open  http; 2376/tcp open  docker


feroxbuster, directory discovery
feroxbuster -u http://stacked.htb

wfuzz, host discovery
wfuzz -H "Host: FUZZ.stacked.htb" -u http://stacked.htb -w /usr/seclists/Discovery/DNS/subdomains-top1...
    </summary>
  

  </entry>

</feed>


